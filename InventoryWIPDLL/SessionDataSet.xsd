<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="SessionDataSet" targetNamespace="http://tempuri.org/SessionDataSet.xsd" xmlns:mstns="http://tempuri.org/SessionDataSet.xsd" xmlns="http://tempuri.org/SessionDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="InventoryWIPConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="InventoryWIPConnectionString (Settings)" PropertyReference="ApplicationSettings.InventoryWIPDLL.Properties.Settings.GlobalReference.Default.InventoryWIPConnectionString" Provider="System.Data.OleDb" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="sessionTableAdapter" GeneratorDataComponentClassName="sessionTableAdapter" Name="session" UserDataComponentName="sessionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventoryWIPConnectionString (Settings)" DbObjectName="[session]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `session` WHERE ((`SessionID` = ?) AND ((? = 1 AND `EmployeeID` IS NULL) OR (`EmployeeID` = ?)) AND ((? = 1 AND `SessionOpen` IS NULL) OR (`SessionOpen` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_SessionID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="SessionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_EmployeeID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="EmployeeID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_EmployeeID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="EmployeeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_SessionOpen" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="SessionOpen" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="Original_SessionOpen" Precision="0" ProviderType="Boolean" Scale="0" Size="0" SourceColumn="SessionOpen" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `session` (`SessionID`, `EmployeeID`, `SessionOpen`) VALUES (?, ?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="SessionID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="SessionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="EmployeeID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="EmployeeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="SessionOpen" Precision="0" ProviderType="Boolean" Scale="0" Size="0" SourceColumn="SessionOpen" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SessionID, EmployeeID, SessionOpen FROM [session]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `session` SET `SessionID` = ?, `EmployeeID` = ?, `SessionOpen` = ? WHERE ((`SessionID` = ?) AND ((? = 1 AND `EmployeeID` IS NULL) OR (`EmployeeID` = ?)) AND ((? = 1 AND `SessionOpen` IS NULL) OR (`SessionOpen` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="SessionID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="SessionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="EmployeeID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="EmployeeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="SessionOpen" Precision="0" ProviderType="Boolean" Scale="0" Size="0" SourceColumn="SessionOpen" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_SessionID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="SessionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_EmployeeID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="EmployeeID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_EmployeeID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="EmployeeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_SessionOpen" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="SessionOpen" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="Original_SessionOpen" Precision="0" ProviderType="Boolean" Scale="0" Size="0" SourceColumn="SessionOpen" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SessionID" DataSetColumn="SessionID" />
              <Mapping SourceColumn="EmployeeID" DataSetColumn="EmployeeID" />
              <Mapping SourceColumn="SessionOpen" DataSetColumn="SessionOpen" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="InventoryWIPConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="CloseOpenSession" Modifier="Public" Name="CloseOpenSession" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="CloseOpenSession">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [session]
SET          SessionOpen = False
WHERE  (SessionID = intSessionID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="intSessionID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
              <DbSource ConnectionRef="InventoryWIPConnectionString (Settings)" DbObjectName="[session]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FindOpenSessionByEmployeeID" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy1" GeneratorSourceName="FindOpenSessionByEmployeeID" GetMethodModifier="Public" GetMethodName="GetDataBy1" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FindOpenSessionByEmployeeID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        SessionID, EmployeeID, SessionOpen
FROM            [session]
WHERE        (SessionOpen = True) AND (EmployeeID = intEmployeeID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="intEmployeeID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="InventoryWIPConnectionString (Settings)" DbObjectName="[session]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FindOpenSessions" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy11" GeneratorSourceName="FindOpenSessions" GetMethodModifier="Public" GetMethodName="GetDataBy11" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy11" UserSourceName="FindOpenSessions">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        SessionID, EmployeeID, SessionOpen
FROM            [session]
WHERE        (SessionOpen = True)</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="InventoryWIPConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="VoidSessionTransaction" Modifier="Public" Name="VoidSessionTransaction" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="VoidSessionTransaction">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [session]
WHERE        (SessionID = intSessionID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="intSessionID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="SessionDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="SessionDataSet" msprop:Generator_UserDSName="SessionDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="session" msprop:Generator_TableClassName="sessionDataTable" msprop:Generator_TableVarName="tablesession" msprop:Generator_TablePropName="session" msprop:Generator_RowDeletingName="sessionRowDeleting" msprop:Generator_RowChangingName="sessionRowChanging" msprop:Generator_RowEvHandlerName="sessionRowChangeEventHandler" msprop:Generator_RowDeletedName="sessionRowDeleted" msprop:Generator_UserTableName="session" msprop:Generator_RowChangedName="sessionRowChanged" msprop:Generator_RowEvArgName="sessionRowChangeEvent" msprop:Generator_RowClassName="sessionRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SessionID" msprop:Generator_ColumnVarNameInTable="columnSessionID" msprop:Generator_ColumnPropNameInRow="SessionID" msprop:Generator_ColumnPropNameInTable="SessionIDColumn" msprop:Generator_UserColumnName="SessionID" type="xs:int" />
              <xs:element name="EmployeeID" msprop:Generator_ColumnVarNameInTable="columnEmployeeID" msprop:Generator_ColumnPropNameInRow="EmployeeID" msprop:Generator_ColumnPropNameInTable="EmployeeIDColumn" msprop:Generator_UserColumnName="EmployeeID" type="xs:int" minOccurs="0" />
              <xs:element name="SessionOpen" msprop:Generator_ColumnVarNameInTable="columnSessionOpen" msprop:Generator_ColumnPropNameInRow="SessionOpen" msprop:Generator_ColumnPropNameInTable="SessionOpenColumn" msprop:Generator_UserColumnName="SessionOpen" type="xs:boolean" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:session" />
      <xs:field xpath="mstns:SessionID" />
    </xs:unique>
  </xs:element>
</xs:schema>